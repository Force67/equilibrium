// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol.sync
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ChangeStructMember : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ChangeStructMember GetRootAsChangeStructMember(ByteBuffer _bb) { return GetRootAsChangeStructMember(_bb, new ChangeStructMember()); }
  public static ChangeStructMember GetRootAsChangeStructMember(ByteBuffer _bb, ChangeStructMember obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ChangeStructMember __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string StructName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStructNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetStructNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetStructNameArray() { return __p.__vector_as_array<byte>(4); }
  public string MemberName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMemberNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMemberNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMemberNameArray() { return __p.__vector_as_array<byte>(6); }
  public protocol.sync.StructMemberType Type { get { int o = __p.__offset(8); return o != 0 ? (protocol.sync.StructMemberType)__p.bb.GetSbyte(o + __p.bb_pos) : protocol.sync.StructMemberType.Data; } }
  public ulong Offset { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong Size { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public uint Flags { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string TargetStructName { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTargetStructNameBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetTargetStructNameBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetTargetStructNameArray() { return __p.__vector_as_array<byte>(16); }
  public int StringType { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<protocol.sync.ChangeStructMember> CreateChangeStructMember(FlatBufferBuilder builder,
      StringOffset structNameOffset = default(StringOffset),
      StringOffset memberNameOffset = default(StringOffset),
      protocol.sync.StructMemberType type = protocol.sync.StructMemberType.Data,
      ulong offset = 0,
      ulong size = 0,
      uint flags = 0,
      StringOffset targetStructNameOffset = default(StringOffset),
      int stringType = 0) {
    builder.StartTable(8);
    ChangeStructMember.AddSize(builder, size);
    ChangeStructMember.AddOffset(builder, offset);
    ChangeStructMember.AddStringType(builder, stringType);
    ChangeStructMember.AddTargetStructName(builder, targetStructNameOffset);
    ChangeStructMember.AddFlags(builder, flags);
    ChangeStructMember.AddMemberName(builder, memberNameOffset);
    ChangeStructMember.AddStructName(builder, structNameOffset);
    ChangeStructMember.AddType(builder, type);
    return ChangeStructMember.EndChangeStructMember(builder);
  }

  public static void StartChangeStructMember(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddStructName(FlatBufferBuilder builder, StringOffset structNameOffset) { builder.AddOffset(0, structNameOffset.Value, 0); }
  public static void AddMemberName(FlatBufferBuilder builder, StringOffset memberNameOffset) { builder.AddOffset(1, memberNameOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, protocol.sync.StructMemberType type) { builder.AddSbyte(2, (sbyte)type, 0); }
  public static void AddOffset(FlatBufferBuilder builder, ulong offset) { builder.AddUlong(3, offset, 0); }
  public static void AddSize(FlatBufferBuilder builder, ulong size) { builder.AddUlong(4, size, 0); }
  public static void AddFlags(FlatBufferBuilder builder, uint flags) { builder.AddUint(5, flags, 0); }
  public static void AddTargetStructName(FlatBufferBuilder builder, StringOffset targetStructNameOffset) { builder.AddOffset(6, targetStructNameOffset.Value, 0); }
  public static void AddStringType(FlatBufferBuilder builder, int stringType) { builder.AddInt(7, stringType, 0); }
  public static Offset<protocol.sync.ChangeStructMember> EndChangeStructMember(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.sync.ChangeStructMember>(o);
  }
};


}

// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol.sync
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ChangeFunctionTailOwner : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ChangeFunctionTailOwner GetRootAsChangeFunctionTailOwner(ByteBuffer _bb) { return GetRootAsChangeFunctionTailOwner(_bb, new ChangeFunctionTailOwner()); }
  public static ChangeFunctionTailOwner GetRootAsChangeFunctionTailOwner(ByteBuffer _bb, ChangeFunctionTailOwner obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ChangeFunctionTailOwner __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Tailea { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong Funcstart { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<protocol.sync.ChangeFunctionTailOwner> CreateChangeFunctionTailOwner(FlatBufferBuilder builder,
      ulong tailea = 0,
      ulong funcstart = 0) {
    builder.StartTable(2);
    ChangeFunctionTailOwner.AddFuncstart(builder, funcstart);
    ChangeFunctionTailOwner.AddTailea(builder, tailea);
    return ChangeFunctionTailOwner.EndChangeFunctionTailOwner(builder);
  }

  public static void StartChangeFunctionTailOwner(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddTailea(FlatBufferBuilder builder, ulong tailea) { builder.AddUlong(0, tailea, 0); }
  public static void AddFuncstart(FlatBufferBuilder builder, ulong funcstart) { builder.AddUlong(1, funcstart, 0); }
  public static Offset<protocol.sync.ChangeFunctionTailOwner> EndChangeFunctionTailOwner(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.sync.ChangeFunctionTailOwner>(o);
  }
};


}

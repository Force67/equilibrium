// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol.sync
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RenameStruct : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RenameStruct GetRootAsRenameStruct(ByteBuffer _bb) { return GetRootAsRenameStruct(_bb, new RenameStruct()); }
  public static RenameStruct GetRootAsRenameStruct(ByteBuffer _bb, RenameStruct obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RenameStruct __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string OldName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOldNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetOldNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetOldNameArray() { return __p.__vector_as_array<byte>(4); }
  public string NewName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNewNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNewNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNewNameArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<protocol.sync.RenameStruct> CreateRenameStruct(FlatBufferBuilder builder,
      StringOffset oldNameOffset = default(StringOffset),
      StringOffset newNameOffset = default(StringOffset)) {
    builder.StartTable(2);
    RenameStruct.AddNewName(builder, newNameOffset);
    RenameStruct.AddOldName(builder, oldNameOffset);
    return RenameStruct.EndRenameStruct(builder);
  }

  public static void StartRenameStruct(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddOldName(FlatBufferBuilder builder, StringOffset oldNameOffset) { builder.AddOffset(0, oldNameOffset.Value, 0); }
  public static void AddNewName(FlatBufferBuilder builder, StringOffset newNameOffset) { builder.AddOffset(1, newNameOffset.Value, 0); }
  public static Offset<protocol.sync.RenameStruct> EndRenameStruct(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.sync.RenameStruct>(o);
  }
};


}

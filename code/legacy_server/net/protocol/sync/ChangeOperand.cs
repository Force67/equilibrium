// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol.sync
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ChangeOperand : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ChangeOperand GetRootAsChangeOperand(ByteBuffer _bb) { return GetRootAsChangeOperand(_bb, new ChangeOperand()); }
  public static ChangeOperand GetRootAsChangeOperand(ByteBuffer _bb, ChangeOperand obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ChangeOperand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Ea { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public protocol.sync.OperandType Type { get { int o = __p.__offset(6); return o != 0 ? (protocol.sync.OperandType)__p.bb.GetSbyte(o + __p.bb_pos) : protocol.sync.OperandType.Unknown; } }
  public sbyte OpCount { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public uint Flags { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ulong Offset { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }

  public static Offset<protocol.sync.ChangeOperand> CreateChangeOperand(FlatBufferBuilder builder,
      ulong ea = 0,
      protocol.sync.OperandType type = protocol.sync.OperandType.Unknown,
      sbyte opCount = 0,
      uint flags = 0,
      ulong offset = 0) {
    builder.StartTable(5);
    ChangeOperand.AddOffset(builder, offset);
    ChangeOperand.AddEa(builder, ea);
    ChangeOperand.AddFlags(builder, flags);
    ChangeOperand.AddOpCount(builder, opCount);
    ChangeOperand.AddType(builder, type);
    return ChangeOperand.EndChangeOperand(builder);
  }

  public static void StartChangeOperand(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddEa(FlatBufferBuilder builder, ulong ea) { builder.AddUlong(0, ea, 0); }
  public static void AddType(FlatBufferBuilder builder, protocol.sync.OperandType type) { builder.AddSbyte(1, (sbyte)type, 0); }
  public static void AddOpCount(FlatBufferBuilder builder, sbyte opCount) { builder.AddSbyte(2, opCount, 0); }
  public static void AddFlags(FlatBufferBuilder builder, uint flags) { builder.AddUint(3, flags, 0); }
  public static void AddOffset(FlatBufferBuilder builder, ulong offset) { builder.AddUlong(4, offset, 0); }
  public static Offset<protocol.sync.ChangeOperand> EndChangeOperand(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.sync.ChangeOperand>(o);
  }
};


}

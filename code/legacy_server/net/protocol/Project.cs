// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Project : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static Project GetRootAsProject(ByteBuffer _bb) { return GetRootAsProject(_bb, new Project()); }
  public static Project GetRootAsProject(ByteBuffer _bb, Project obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Project __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Version { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public string Md5Hash { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMd5HashBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetMd5HashBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetMd5HashArray() { return __p.__vector_as_array<byte>(8); }
  public string Comments { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCommentsBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetCommentsBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCommentsArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<protocol.Project> CreateProject(FlatBufferBuilder builder,
      int version = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset md5HashOffset = default(StringOffset),
      StringOffset commentsOffset = default(StringOffset)) {
    builder.StartTable(4);
    Project.AddComments(builder, commentsOffset);
    Project.AddMd5Hash(builder, md5HashOffset);
    Project.AddName(builder, nameOffset);
    Project.AddVersion(builder, version);
    return Project.EndProject(builder);
  }

  public static void StartProject(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddVersion(FlatBufferBuilder builder, int version) { builder.AddInt(0, version, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddMd5Hash(FlatBufferBuilder builder, StringOffset md5HashOffset) { builder.AddOffset(2, md5HashOffset.Value, 0); }
  public static void AddComments(FlatBufferBuilder builder, StringOffset commentsOffset) { builder.AddOffset(3, commentsOffset.Value, 0); }
  public static Offset<protocol.Project> EndProject(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.Project>(o);
  }
};


}

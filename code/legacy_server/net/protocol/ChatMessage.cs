// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ChatMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static ChatMessage GetRootAsChatMessage(ByteBuffer _bb) { return GetRootAsChatMessage(_bb, new ChatMessage()); }
  public static ChatMessage GetRootAsChatMessage(ByteBuffer _bb, ChatMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ChatMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Sender { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Text { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTextBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetTextBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetTextArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<protocol.ChatMessage> CreateChatMessage(FlatBufferBuilder builder,
      int sender = 0,
      StringOffset textOffset = default(StringOffset)) {
    builder.StartTable(2);
    ChatMessage.AddText(builder, textOffset);
    ChatMessage.AddSender(builder, sender);
    return ChatMessage.EndChatMessage(builder);
  }

  public static void StartChatMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddSender(FlatBufferBuilder builder, int sender) { builder.AddInt(0, sender, 0); }
  public static void AddText(FlatBufferBuilder builder, StringOffset textOffset) { builder.AddOffset(1, textOffset.Value, 0); }
  public static Offset<protocol.ChatMessage> EndChatMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.ChatMessage>(o);
  }
};


}

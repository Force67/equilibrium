// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol.sync
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct NameAddr : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static NameAddr GetRootAsNameAddr(ByteBuffer _bb) { return GetRootAsNameAddr(_bb, new NameAddr()); }
  public static NameAddr GetRootAsNameAddr(ByteBuffer _bb, NameAddr obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public NameAddr __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Addr { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public bool Local { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<protocol.sync.NameAddr> CreateNameAddr(FlatBufferBuilder builder,
      ulong addr = 0,
      StringOffset nameOffset = default(StringOffset),
      bool local = false) {
    builder.StartTable(3);
    NameAddr.AddAddr(builder, addr);
    NameAddr.AddName(builder, nameOffset);
    NameAddr.AddLocal(builder, local);
    return NameAddr.EndNameAddr(builder);
  }

  public static void StartNameAddr(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddAddr(FlatBufferBuilder builder, ulong addr) { builder.AddUlong(0, addr, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddLocal(FlatBufferBuilder builder, bool local) { builder.AddBool(2, local, false); }
  public static Offset<protocol.sync.NameAddr> EndNameAddr(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.sync.NameAddr>(o);
  }
};


}

// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct HandshakeAck : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static HandshakeAck GetRootAsHandshakeAck(ByteBuffer _bb) { return GetRootAsHandshakeAck(_bb, new HandshakeAck()); }
  public static HandshakeAck GetRootAsHandshakeAck(ByteBuffer _bb, HandshakeAck obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public HandshakeAck __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public protocol.UserPermissions Perms { get { int o = __p.__offset(4); return o != 0 ? (protocol.UserPermissions)__p.bb.Get(o + __p.bb_pos) : 0; } }
  public uint UserIndex { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public int NumUsers { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<protocol.HandshakeAck> CreateHandshakeAck(FlatBufferBuilder builder,
      protocol.UserPermissions perms = 0,
      uint userIndex = 0,
      int numUsers = 0) {
    builder.StartTable(3);
    HandshakeAck.AddNumUsers(builder, numUsers);
    HandshakeAck.AddUserIndex(builder, userIndex);
    HandshakeAck.AddPerms(builder, perms);
    return HandshakeAck.EndHandshakeAck(builder);
  }

  public static void StartHandshakeAck(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddPerms(FlatBufferBuilder builder, protocol.UserPermissions perms) { builder.AddByte(0, (byte)perms, 0); }
  public static void AddUserIndex(FlatBufferBuilder builder, uint userIndex) { builder.AddUint(1, userIndex, 0); }
  public static void AddNumUsers(FlatBufferBuilder builder, int numUsers) { builder.AddInt(2, numUsers, 0); }
  public static Offset<protocol.HandshakeAck> EndHandshakeAck(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<protocol.HandshakeAck>(o);
  }
};


}

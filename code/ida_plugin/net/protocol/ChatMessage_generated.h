// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_CHATMESSAGE_PROTOCOL_H_
#define FLATBUFFERS_GENERATED_CHATMESSAGE_PROTOCOL_H_

#include "flatbuffers/flatbuffers.h"

namespace protocol {

  struct ChatMessage;
  struct ChatMessageBuilder;

  struct ChatMessage FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
	typedef ChatMessageBuilder Builder;
	enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
	  VT_SENDER = 4,
	  VT_TEXT = 6
	};
	int32_t sender() const
	{
	  return GetField<int32_t>(VT_SENDER, 0);
	}
	const flatbuffers::String *text() const
	{
	  return GetPointer<const flatbuffers::String *>(VT_TEXT);
	}
	bool Verify(flatbuffers::Verifier &verifier) const
	{
	  return VerifyTableStart(verifier) &&
	         VerifyField<int32_t>(verifier, VT_SENDER) &&
	         VerifyOffset(verifier, VT_TEXT) &&
	         verifier.VerifyString(text()) &&
	         verifier.EndTable();
	}
  };

  struct ChatMessageBuilder {
	typedef ChatMessage Table;
	flatbuffers::FlatBufferBuilder &fbb_;
	flatbuffers::uoffset_t start_;
	void add_sender(int32_t sender)
	{
	  fbb_.AddElement<int32_t>(ChatMessage::VT_SENDER, sender, 0);
	}
	void add_text(flatbuffers::Offset<flatbuffers::String> text)
	{
	  fbb_.AddOffset(ChatMessage::VT_TEXT, text);
	}
	explicit ChatMessageBuilder(flatbuffers::FlatBufferBuilder &_fbb) :
	    fbb_(_fbb)
	{
	  start_ = fbb_.StartTable();
	}
	ChatMessageBuilder &operator=(const ChatMessageBuilder &);
	flatbuffers::Offset<ChatMessage> Finish()
	{
	  const auto end = fbb_.EndTable(start_);
	  auto o = flatbuffers::Offset<ChatMessage>(end);
	  return o;
	}
  };

  inline flatbuffers::Offset<ChatMessage> CreateChatMessage(
      flatbuffers::FlatBufferBuilder &_fbb,
      int32_t sender = 0,
      flatbuffers::Offset<flatbuffers::String> text = 0)
  {
	ChatMessageBuilder builder_(_fbb);
	builder_.add_text(text);
	builder_.add_sender(sender);
	return builder_.Finish();
  }

  inline flatbuffers::Offset<ChatMessage> CreateChatMessageDirect(
      flatbuffers::FlatBufferBuilder &_fbb,
      int32_t sender = 0,
      const char *text = nullptr)
  {
	auto text__ = text ? _fbb.CreateString(text) : 0;
	return protocol::CreateChatMessage(
	    _fbb,
	    sender,
	    text__);
  }

} // namespace protocol

#endif // FLATBUFFERS_GENERATED_CHATMESSAGE_PROTOCOL_H_
